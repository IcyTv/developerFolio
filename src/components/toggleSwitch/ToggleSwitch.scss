$ball-color: #ffffff;
$active-color: #62c28e;
$inactive-color: #cccccc;

$switch-size: 32px;
$ball-spacing: 2px;
$stretch-factor: 1.625;

$switch-class: "switch-toggle";
@mixin switch(
	$size: $switch-size,
	$spacing: $ball-spacing,
	$stretch: $stretch-factor,
	$active-color: $active-color,
	$inactive-color: $inactive-color,
	$class: $switch-class,
	$ball-color: $ball-color
) {
	$self: "." + $class;
	$on: #{$self}--on;
	$off: #{$self}--off;

	$active-color: $active-color;
	$switch-size: $size;
	$ball-spacing: $spacing;
	$ball-color: $ball-color;
	$stretch-factor: $stretch;
	$ball-size: $switch-size - ($ball-spacing * 2);
	$ball-slide-size: ($switch-size * ($stretch-factor - 1) + $ball-spacing);

	height: $switch-size;
	width: $switch-size * $stretch-factor;
	cursor: pointer !important;
	user-select: none !important;
	-moz-user-select: none !important;
	-ms-user-select: none;
	-webkit-user-select: none !important;

	position: relative !important;
	display: inline-block;

	&#{$on},
	&#{$off} {
		&::before,
		&::after {
			content: " ";
			left: 0;
			position: absolute !important;
		}

		&::before {
			height: inherit;
			width: inherit;
			border-radius: $switch-size / 2;
			will-change: background;
			transition: background 0.4s 0.3s ease-out;
		}

		&::after {
			top: $ball-spacing;
			height: $ball-size;
			width: $ball-size;
			border-radius: $ball-size / 2;
			background: $ball-color !important;
			will-change: transform;
			transition: transform 0.4s 0.3s ease-out;
		}
	}

	&#{$on} {
		&::before {
			background: $active-color !important;
		}
		&::after {
			transform: translateX($ball-slide-size);
		}
	}

	&#{$off} {
		&::before {
			background: $inactive-color !important;
		}
		&::after {
			transform: translateX($ball-spacing);
		}
	}
}

@function get-switch-class($selector) {
	// First parse the selector using `selector-parse`
	// Extract the first selector in the first list using `nth` twice
	// Extract the first simple selector using `simple-selectors` and `nth`
	// Extract the class name using `str-slice`

	@return str-slice(
		nth(simple-selectors(nth(nth(selector-parse($selector), 1), 1)), 1),
		2
	);
}

.switch {
	$self: &;
	$toggle: #{$self}-toggle;
	$class: get-switch-class($toggle);

	&#{$self}--default > #{$toggle} {
		@include switch($class: $class);
	}

	&#{$self}--graphite-small > #{$toggle} {
		@include switch($active-color: gray, $size: 20px, $class: $class);
	}

	&#{$self}--dark-inverse > #{$toggle} {
		@include switch(
			$active-color: rgb(224, 222, 222),
			$inactive-color: black,
			$class: $class
		);
	}

	&#{$self}--dark > #{$toggle} {
		@include switch($active-color: black, $class: $class);
	}
}
